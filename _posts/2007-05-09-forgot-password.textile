---
layout: post
title: !binary |-
  Rm9yZ290IFBhc3N3b3JkPw==
typo_id: 485
---
I did it again...forgot my password. Now if everyone could offer an openid login like <a href="http://www.highrisehq.com/">Highrise</a>. This time it happened on <a href="http://myconfplan.com/">myconfplan</a>, while I was organizing my schedule for next weeks RailsConf. As I didn't find a link to reset the password on myconfplan, I send an email to their support. <a href="http://drnicwilliams.com">Dr Nic</a> replied promptly and said he didn't implement this yet on this wedsite, but he could manually reset the password. Well, recently I implemented that feature for MySpyder.net (one of our forthcoming web applications). So I send him some code snippets. Not sure if <a href="http://drnicwilliams.com">Dr Nic</a> will use them, but maybe some of our blog readers may be interested, so here we go.

They are several ways to implement a "Forgot Password? This time we choose to send out a "reset password" link that is valid for 24 hours. This link lets the user login, bypassing the standard login, and showing the change password screen.

h3. First lets add a migration.

<typo:code lang="ruby" title="Migration">
class ForgotPassword < ActiveRecord::Migration
  def self.up
    add_column :users, :reset_password_code, :string
    add_column :users, :reset_password_code_until, :datetime
  end

  def self.down
    remove_column :users, :reset_password_code
    remove_column :users, :reset_password_code_until
  end
end
</typo:code>

h3. "Forgot password" form.

Then add a "forgot password" form, allowing the user to submit the email to which the "reset password" link will be emailed. When the form is submitted, the controller creates a 'reset password code' that is valid for one day, and sends an email to the user.

<typo:code lang="ruby" title="UserController#forgot_password">
  def forgot_password
    user = User.find_by_email(params[:email])
    if (user) 
      user.reset_password_code_until = 1.day.from_now
      user.reset_password_code =  Digest::SHA1.hexdigest( "#{user.email}#{Time.now.to_s.split(//).sort_by {rand}.join}" )
      user.save!
      UserNotifier.deliver_forgot_password(user)
      render :xml => "<errors><info>Reset Password link emailed to #{user.email}.</info></errors>"
    else
      render :xml => "<errors><error>User not found: #{params[:email]}</error></errors>"
    end 
  end
</typo:code>

h3. Send email with the 'reset password' link.

When the user receives the "reset password" email and clicks the link to reset the password, the reset_password method is invoked on the controller. The user associated with the "reset_code" is found, and if the the reset_code is not yet expired the user is automatically logged-in and redirected to the account page where he can change his password. Note that by adding an expiration attribute for the code, we don't need to run a cleanup batch process to invalidate these codes. Not in the following code we redirect to a ".swf" file. This was an early experiment where the user interface of the application was written in Flex. We are currently rewriting it to use a more traditional html and css approach. 

<typo:code lang="ruby" title="UserController#reset_password">
  def reset_password
    user = User.find_by_reset_password_code(params[:reset_code])
    self.current_user = user if user &&  user.reset_password_code_until  && Time.now < user.reset_password_code_until 
    redirect_to logged_in? ? "/MySpyder.swf?a=account" : "/MySpyder.swf?a=login"    
  end
</typo:code>

The email is simply send using the following ActionMailer.

<typo:code lang="ruby" title="UserNotifier">
class UserNotifier < ActionMailer::Base
  def forgot_password(user)
    setup_email(user)
    @subject    += 'MySpyder.net - Reset Password'  
    @body[:url]  = "http://myspyder.net/reset_password/#{user.reset_password_code}"
  end
    
  protected
    def setup_email(user)
      @recipients  = "#{user.email}"
      @from        = "admin@myspyder.net"
      @subject     = "[myspyder.net] "
      @sent_on     = Time.now
      @body[:user] = user
    end
end
</typo:code>

And the view for the UserNotifier is the following

<typo:code lang="ruby" title="forgot_password.erb">
<%= @user.email %>,

You can reset your password by using the following link <%= @url %>

Thank your for using MySpyder.net
</typo:code>
