---
layout: post
title: !binary |-
  cmFpbHNjb25mIC0gRGF5IDM=
typo_id: 5080
---
<p>Speaker Slides<br /> <a href="http://railsconf.com/slides">http://railsconf.com/slides</a></p><p>Official Photos<br /> <a href="../../">http://www.flickr.com/photos/oreillyconf/sets/72157626743161970</a></p><p>Keynote Video and Other Interviews<br /> <a href="../../">http://www.youtube.com/playlist?p=PL379EA9290474C86C</a></p><p>News and Coverage:<br /> <a href="../../">http://en.oreilly.com/rails2011/public/content/news-coverage</a></p><h3>Sproutcore with Yehuda Katz</h3><p><em>This are some notes I took at the Sproutcore BOF tonight...</em></p><p>He started working around 9 month ago. Started working on it full time at the beginning of the year. First thing he did was to evaluate how to make the getting started experience better. They switched over to a template model doing views. The biggest thing he will say in regards with template, they automatically update the html when the underlying objects update. Sprout core today do two things, one is to handle event and two, to update the dom. So they will split this in two objects. They are changing the render and update. They will have a plugable UI with a widget layer. A separate layer for Desktop and Mobile.  Currently Checkbox, Textbox, and Button are widgets that use templates.</p><p>Today they announce Sproutcore 2.0 alpha. It's a 20k single file with contains the core abstraction. They have a separate library to access the database store that is also 20k, that will provide ActiveRecord like functionality.</p><p>Will release a dropin plugin for Rails and Sproutcore to connect automatically to a Rails application to do basic crud.</p><p>To install&nbsp;Sproutcore in a rails app you can use a generator which will do the following changes:</p><p>In your Gemfile</p><p>&nbsp; &nbsp; gem 'bulk_api'</p><p>In the routes file</p><p>&nbsp; &nbsp; mount Bulk::Spourcore.new =&gt; "/_sproutcore"<br />&nbsp; &nbsp; builk_routes "/api/build/"</p><p>It then created the app/sproutcore folder.</p><p>These are a few javascript classes that allow to deal with the Rails integration:</p><ul><li>SC.Application</li><li>SC.Store</li><li>SC.Record&nbsp;</li></ul><p>The generator can be used as follows for example to add a 'projects' resource:</p><p>&nbsp; &nbsp;rails g bulk:resource projects</p><p>Which adds the app/builk/projects_resource.rb.&nbsp;This class manages automatically all the crud operations from javascript. So the client side can auto commit some of the changes and can send multiple statements as one html requests.</p><p>Every Tuesday, starting in 2 weeks, &nbsp;at 10am PST they will have a one hour training session.&nbsp;</p><p>&nbsp;</p>
