---
layout: post
title: !binary |-
  Q2VydGlmaWVkIEZsZXggMi4wIERldmVsb3Blci4=
typo_id: 236
---
Last week I passed Adobe's  Flex 2 Developer Exam. Now what's that got to with Rails. Like you may have seen in my <a href="http://onrails.org/articles/2007/02/07/sneak-peek-digital-seed-an-elearning-application-build-ruby-on-rails-and-flex">previous post</a> I like both technologies, Flex and Ruby on Rails, and I see the strength of both coming together and allowing to build some really cool applications. Now <a href="http://www.themidnightcoders.com/weborb/rubyonrails/index.htm">WebORB for Ruby on Rails</a> will play a big element in tying both together. WebORB is not the only way to build a Flex app on top of a Ruby on Rails server, but it provides an efficient mechanism to transfer data between the UI and the server. Beginning of 2005 with Lee we wrote <a href="http://flexonrails.com/">Flex::OnRails</a>, a now "deprecated" (as in don't even try to use it) framework, that was build on top of AMF4R. At that time combining Flex and Rails was an odd match, due to the pure enterprise nature of Flex with it's very high price sticker. Now that Flex is free, I can see many projects benefiting from integrating both. It is true that many web sites don't need a Rich User interfaces that go beyond what can be achieve with javascript. There are many javascript based websites that are incredible. See <a href="http://www.fluxiom.com/">http://www.fluxiom.com/</a> or <a href="http://wufoo.com/">http://wufoo.com/</a> as two refined examples. However with Flex it's often faster to build an application than with html and javascript, the applications  often perform better, are easier to skin for a developer, the code is more readable and can support very large projects. Don't take me wrong, I love the <a href="http://www.prototypejs.org/">Prototype</a> library and <a href="http://script.aculo.us/">Scriptaculous</a> is really cool, and I will do many more "pure" Ruby on Rails projects, but at least now there is a serious alternative that I will consider in many scenarios.
<p/>
Now before you ask why did I even bother doing a certification, let me answer it. The first reason is that it forces me to read and study material that I would never have the patience to read otherwise as there is always too many cool things to try out. Now everyone has it's own style of learning. I started Rails by reading all the rdoc that was available and I also love to read the source code. The second reasons is marketing, and this worked really well for me in the past and opened several doors. Personally,  I wouldn't value a developer by it's certification but rather by the projects he worked on, the code he writes and it's personality. 
<p/>
I haven't found much information out there on the Flex certification which is pretty new . The <a href="http://weblogs.macromedia.com/flexteam/archives/Exam_Guide_Flex2.pdf">Exam Preparation Guide</a> by Adobe provides an overview and there is a more <a href="http://www.donathgroup.com/pdf/Flex20Blueprint.pdf">detailed version</a> on the net which is not the official one. I found lot's of information in <a href="http://livedocs.macromedia.com/flex/201/">Adobe's online documentation</a> and in the <a href="http://www.amazon.com/Adobe-Flex-2-Training-Source/dp/032142316X">Flex 2, Training from the source</a> book. 
<p/>
So be ready to hear a little more on Flex and Rails on this blog.
