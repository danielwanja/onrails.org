---
layout: post
title: !binary |-
  UmFpbHNDb25mIDIwMTEgLSBUaGFuayB5b3Uh
typo_id: 5081
---
<div>It's a wrap. Wow, that was fun and a great conference. It didn't hurt that a party was planned every night. Engineyard, Bluebox, Github had open bars in a different places every night. Free beer for everyone. If that doesn't feel like a tech bubble. But what fun it was. &nbsp;It wasn't just the partying, lots of coding, people networking, awesome keynotes and tons of great talks that made this Railsconf the best in my view. RailsConf is a well oiled machine, but it takes lots of effort and planing to make it such a successful event. So thank you to everyone that works behind the scenes to get this event going. What impresses me the most is that the Rails core team manages to make Rails better - release after release, year over year. Better not with more features, but removing all the stuff that is not needed anymore and adding features that keeps the Rails community engaged and enthusiast. Rails 3.0 was a big refactoring that allowed this all and was released about this time last year. Rails 3.1 was announced at DHH's keynote where he showed the way of where this can lead us and this will certainly trigger a new generations of mobile and desktop Rich Internet Applications powered by Rails. Rails 3.1 will be released this week, you can use the beta by doing a 'gem install rails --pre', and I'm actually excited to use CoffeScript. CSS and JavaScript are now first class citizen in Rails. This was the year of JavaScript at RailsConf, and if as usual Rails is right, it's a showcase of where the industry is going. So now is the time to jump on board, Backbone.js, SproutCore , CoffeScript and Rails 3.1 here we come!&nbsp;</div><div></div><div></div><div>I was really excited by Yehuda Katz's talk "Bridging The Gap - Using Rails To Write Dry Rich Client Applications" as this is was I am evangelizing since years, use Rails as an API with all the goodies it has to offer and create "fatter" client applications that are more compelling to use. &nbsp;Yehuda made a compelling presentation on what's great about Rails beyond the view layer and pointed out that just saying use REST wasn't enough to build the new style of apps that are starting to show up. Hence he described a new protocol built on top of REST to allow bulk updates. He and his team created a first implementation that can be used with Rails, <a href="https://github.com/drogus/bulk_api">the bulk_api gem</a>. Of course I have still a foot in the Flex world and will leverage this work to Flex and will be cranking out a <a href="https://github.com/danielwanja/bulk_data_source_flex">BulkDataStore for Flex framework</a> over the next few weeks. Yea, Flex has still a few miles left :-)&nbsp;</div><div></div><div></div><div>Again, the biggest kudos goes to the presenters where, beside one talk that was ultra light, all talks where just awesome. I enjoyed the html5 tutorial the first day during which I had time code html5. This was followed by Bruce Williams and Jonh Athayde talk on Building Bulletproof Views. As usual Bruce loving code design and sense of esthetics managed to convey on how to be a better programmer through example. Really enjoyed it. There where just so many practical sessions, like how to scale your application, how to integrate diverse databases, how Saas works, a talk on CoffeScript, on testing the impossible, intense lightning talks, talks on HBase, and an ultra fun talk on Backbone.js.</div><div></div><div></div><div>The vendors area was also great fun and the usual suspect where present, Heroku, Engineyard, New Relics and others. Thanks for the pingpong ball gun and all the T-shirts. My wife can wait to see me in them!</div><div></div><div></div><div>Rails is the community. I was amazed on how many newcomers where here and how they are welcomed. This was not only apparent at the Ignite Rails event where presenters showed their enthusiasms of sharing knowledge but also apparent in all the discussions that where going on between sessions. Speaking of Ignite Rails, this was just awesome. 16 presenters, 5 minutes each = high energy. That Rocked. Another parallel event was BohConf, with many sessions and local Ruby and Rails developers hanging out just next to RailsConf and having many really cool sessions.</div><div></div><div>Finally it was great to meet again with the usual Denver crew. Now back to coding!</div><div></div><div><div>So if you didn't make this year, make sure to put it on your calendar for next year!</div></div><div></div><div>Enjoy!</div><div>Daniel Wanja</div><div><a href="http://twitter.com/danielwanja">@danielwanja</a></div>
